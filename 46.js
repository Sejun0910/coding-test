// 나머지가 1이 되는 수 찾기

// 문제 설명
// 자연수 n이 매개변수로 주어집니다. 
// n을 x로 나눈 나머지가 1이 되도록 하는 가장 작은 자연수 x를 return 하도록 solution 함수를 완성해주세요. 
// 답이 항상 존재함은 증명될 수 있습니다.

// 제한사항
// 3 ≤ n ≤ 1,000,000

// 입출력 예
// n	result
// 10	3
// 12	11

// 입출력 예 설명
// 입출력 예 #1

// 10을 3으로 나눈 나머지가 1이고, 3보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 3을 return 해야 합니다.
// 입출력 예 #2

// 12를 11로 나눈 나머지가 1이고, 11보다 작은 자연수 중에서 문제의 조건을 만족하는 수가 없으므로, 11을 return 해야 합니다.

// 문제
// function solution(n) {
//     var answer = 0;
//     return answer;
// }


// 사고회로
// 입력받은 n을 answer로 나누고 나머지가 1이 될 때까지
// answer의 값을 1씩 계속 증가시키면 될 거 같다


// 풀이
function solution(n) {
    var answer = 0;

    while(n%answer != 1) answer++ // n을 answer로 나눴을 때 나머지가 1이 될 떄까지
    // answer를 1씩 증가 시키는 코드이다
    // != 를 써야하는 이유 : 이 연산자는 서로 같지 않을 때 true를 반환한다
    // 이 코드에서 n % answer 가 1이 아니면 즉, n 을 answer로 나눈 나머지가 1이 아니면 answer를 1씩 증가시키는 코드다
    // 만약 != 대신 == 를 사용한다면 'n'을 answer로 나눈 나머지가 1인 경우에도 answer가 계속 증가하게 된다
    return answer;
}

// 용어
// != : 서로 같지 않을 때 true를 반환하는 연산자이다

// 영어단어


// 생각정리
// for문으로 돌리다가 while로 하면 더 간단할 것 같아서
// while로 돌려 n이 answer로 계속 나눴을 때 나머지가 1이 되는 숫자를
// 제일 먼저 반환되는 코드를 만들었다