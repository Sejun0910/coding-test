// 최대공약수와 최소공배수

// 문제 설명
// 두 수를 입력받아 두 수의 최대공약수와 최소공배수를 반환하는 함수, solution을 완성해 보세요. 
// 배열의 맨 앞에 최대공약수, 그다음 최소공배수를 넣어 반환하면 됩니다. 예를 들어
// 두 수 3, 12의 최대공약수는 3, 최소공배수는 12이므로 solution(3, 12)는 [3, 12]를 반환해야 합니다.

// 제한 사항
// 두 수는 1이상 1000000이하의 자연수입니다.

// 입출력 예
// n	m	return
// 3	12	[3, 12]
// 2	5	[1, 10]

// 입출력 예 설명
// 입출력 예 #1
// 위의 설명과 같습니다.

// 입출력 예 #2
// 자연수 2와 5의 최대공약수는 1, 최소공배수는 10이므로 [1, 10]을 리턴해야 합니다.


// 문제
// function solution(n, m) {
//     var answer = [];
//     return answer;
// }


// 사고회로
// 입력받은 n과 m의 최대 공약수와 최소 공배수를 구하는 로직을 만들면 되는데
// n 이 클지 m이 클지 모르기 때문에 이것도 판별해줘야 할 거 같다


// 풀이
function solution(n, m) {
    var answer = [];
    var x = 0; // 최대 공약수를 담을 변수
    var y = 0; // 최소 공배수를 담을 변수

    var num = n > m ? n : m // 입력받은 n과 m중 어느 수가 더 큰지 모르기 때문에
    // 판별을 해줘야 하고 더 큰 숫자를 num에 넣는다
    // 우린 더 큰 숫자를 찾아서 큰 숫자를 기준으로 for문을 돌려야 
    // 최대 공약수를 찾을 수 있기 때문에 찾아야 하는 것이다

    for(let i=1; i<=num; i++){ // 최대 공약수를 구하는 코드
        if(n%i == 0 && m%i ==0){ // n을 우리가 for문으로 돌리고 있는 i로 나눴을 때 0으로 나와야하고
            // 동시에 m을 i로도 나눴을 때 0으로 나와야 조건이 둘다 true로 일치하는 && 연산자를 사용했다
            x = i; // 우리가 구한 최대 공약수를 x에 담는다
        }
    }
    // 최소공배수 구하는 공식 : 두 수의 곱 / 최대공약수
    y = n * m / x; // 입력받은 n 과 m 을 곱하고 우리가 for문으로 구한 x로 나눴을 때 나오는 숫자가
    // 최대 공약수이다
    answer = [x,y]; // 그 값을 answer에 배열로 입력해 출력한다
    return answer;
}


// 용어
// && : 논리곱 연산자로서 두 값을 비교할 때 둘다 모두 true일 경우에만 true를 반환한다
// % : 나머지를 구해주는 연산자다
// ( x ? y : z ) : x가 참이면 y 거짓이면 z 를 반환한다


// 영어단어


// 생각정리
// 최대 공약수를 구하는 공식과 최소 공배수를 구하는 공식만 알면 쉽게 풀 수 있는 문제이다
// n이 클지 m 이 클지 모르기 때문에 이것도 판별해주는 것에 조심해야한다