// 평균 구하기

// 문제 설명
// 정수를 담고 있는 배열 arr의 평균값을 return하는 함수, solution을 완성해보세요.

// 제한사항
// arr은 길이 1 이상, 100 이하인 배열입니다.
// arr의 원소는 -10,000 이상 10,000 이하인 정수입니다.

// 입출력 예
// arr	return
// [1,2,3,4]	2.5
// [5,5]	5

// 문제
// function solution(arr) {
//     var answer = 0;
//     return answer;
// }

// 사고회로
// 평균을 구하는 값이기 때문에 한 변수를 만들고
// 거기에 입력받은 값을 모두 더하고 그 배열의 길이만큼 나누면 될 거 같다



// 풀이
function solution(arr) {
    const sum = arr.reduce((acc, cur)=> acc + cur);
    // arr안에 있는 입력받은 값들을 reduce 메소드를 이용할 것이다
    // acc는 cur한테 입력받는 값을 저장하겠다 (누적 값을 저장할 변수) * 초기값은 없다
    // cur은 arr의 0번부터 끝까지 돌겠다
    // => acc + cur 의 뜻 : reduce 뒤에 쓴 매개변수 2개를 이용할 것인데
    // cur로 0번부터 끝의 인덱스까지 돌때마다 acc에 값을 더할 것이다
    // 간단하게 말하면 arr안에 있는 값들을 한 변수에다가 다 더 해서 sum에 넣어달라
    return sum/arr.length;
    // 받은 sum을 arr의 배열의 개수만큼 나눠달라 즉, 평균을 구하기 위해 개수만큼 나누는 것
}


// 용어
// reduce() 메소드:
// 배열의 각 요소에 대해 지정된 함수를 실행하며, 결과 값을 누적시키는 메소드입니다.
// 첫 번째 매개변수는 누적 값을 저장할 변수이며, 두 번째 매개변수는 현재 배열 요소입니다.
// 두 번째 매개변수를 제외한 모든 매개변수는 선택 사항입니다.

// => (화살표 함수):
// ES6에서 추가된 함수 표현식으로, function 키워드 대신 사용할 수 있습니다.
// 매개변수와 실행 코드를 화살표(->)로 구분하여 표현합니다.

// acc:
// reduce() 메소드의 첫 번째 매개변수로 누적 값을 저장할 변수입니다.
// 초기값은 없으므로 배열의 첫 번째 요소가 첫 번째 누적 값으로 사용됩니다.

// cur:
// reduce() 메소드의 두 번째 매개변수로 현재 배열 요소입니다.

// acc + cur:
// 현재 배열 요소와 누적 값을 더하여 새로운 누적 값을 반환하는 화살표 함수입니다.


// 영어단어
// reduce : 줄이다(축소하다)


// 생각정리
// reduce로 쓸 수 있는 매개변수들이 어떤 것들이 있는지 정확히 몰랐었지만
// 이번 문제 acc와 cur에 대해 알게됐다
// 간단하게 이런 평균을 구하는 문제애 대해 이런식으로 접근하면 간편할 것 같다